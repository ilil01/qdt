%\documentclass[unicode]{beamer}
\documentclass[unicode,hyperref={unicode=true}]{beamer}
\mode<presentation>
{
%  \useoutertheme{shadow}
%  \useinnertheme{rounded}
  \usecolortheme[RGB={55,109,160}]{structure}
%  \usetheme[height=7mm]{Rochester}
%  \usetheme{default}
%  \usetheme{Warsaw}
%  \usetheme{Frankfurt}
  \usetheme{Dresden}
%  \setbeamercolor{normal text}{bg=black,fg=white}
  \setbeamertemplate{navigation symbols}{}
  \setbeamertemplate{blocks}[rounded][shadow=true]
  \setbeamertemplate{items}[ball]
  \setbeamercovered{invisible}
}

\defbeamertemplate*{footline}{infolines theme}
{
  \leavevmode%
  \hbox{%
  \begin{beamercolorbox}[wd=\paperwidth,ht=2.25ex,dp=1ex,right]{date in head/foot}%
    \insertframenumber{} / \inserttotalframenumber\hspace*{2ex}
  \end{beamercolorbox}}%
  \vskip0pt%
}

% \setbeamertemplate{headline}{
%   \leavevmode
%  \hbox{%
%  \begin{beamercolorbox}[wd=\paperwidth,ht=3.25ex,dp=1ex,right]{date in head/foot}%
%    Институт системного программирования \\ Российская академия наук
%    \insertframenumber{} / \inserttotalframenumber\hspace*{2ex}
%  \end{beamercolorbox}}%
%  \vskip0pt%
%   \includegraphics[width=\textwidth]{logo-cmb.png}%
%}

\setbeamertemplate{headline}{
	\begin{beamercolorbox}[wd=\paperwidth,ht=3.25ex,dp=1ex,left]{date in head/foot}
		~~\insertsection
	\end{beamercolorbox}
}

\setbeamerfont{section title}{parent=title}
\setbeamercolor{section title}{parent=titlelike}
\defbeamertemplate*{section page kb}{default}[1][]
{
  \centering
	\begin{beamercolorbox}[sep=8pt,center,#1]{section title}
	  \usebeamerfont{section title}\insertsection\par
	\end{beamercolorbox}
}
\newcommand*{\sectionpagekb}{\usebeamertemplate*{section page kb}}
\setbeamercolor{block title}{use=structure,fg=white,bg=structure.fg!75!black}

\usepackage{etex}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage{graphicx}
\usepackage{fancyvrb}
\usepackage{shortvrb}
\usepackage{amsthm}
\usepackage[]{url}
%\MakeShortVerb{!}
\usepackage{listings}
\lstset{ %
    stringstyle=\color{red},
    extendedchars=\true,
    inputencoding=utf8,
    columns=fixed,keepspaces
}
\usepackage{enumerate}
\usepackage{tikz}
\usepackage{xy}
\usepackage{algorithm}
\usepackage{algorithmicx}
\usepackage{algpseudocode}
\usepackage{latexsym}
\usepackage{subfig}
\usepackage{tikz}
\usepackage{dirtree}
\usetikzlibrary{positioning,arrows}
%\lstset{basicstyle=\ttfamily,language=lisp}

\theoremstyle{definition}
\newtheorem{mydef}{Определение}
\theoremstyle{plain}
\newtheorem{stmt}{Утверждение}
%\theoremstyle{plain}
%\newtheorem{lemma}{Лемма}


%% Комманды в кириллице %%

\newcommand{\п}{\item} % пункт

%% А дальше - держитесь! %%


\title[]
{Автоматизированная отладка QEmu}

\author[]{Ефимов Василий}

\institute[]{ИСП РАН}

\date[]{07 ноября 2018}

\begin{document}

\begin{frame}
\titlepage
\end{frame}


\section{}
\begin{frame}{Введение}
\textbf{%
Обзор классических способов и средств отладки. Узкоспециализированная отладка.
}
\vfill
\begin{itemize}
\п Низкоуровневые отладочные примитивы
\п Высокоуровневые отладочные примитивы
\п Отладочные инструменты общего назначения
\п API для автоматизации отладки
\п GDB Python скрипты для отладки QEmu
\end{itemize}
\end{frame}


\section{Сложности классической отладки}


\begin{frame}{Низкоуровневые отладочные примитивы}
\begin{center}
\includegraphics[height=0.9\textheight]{lowlevel-debug-primitives.png}
\end{center}
\end{frame}

\begin{frame}{Высокоуровневые отладочные примитивы}
\begin{center}
\includegraphics[width=\linewidth]{highlevel-debug-primitives.png}
\end{center}
\end{frame}

\begin{frame}
\end{frame}

\section{}
\begin{frame}
\textbf{%
Разработанный Python-пакет для отладки программ на языке Си через GDB Remote
Serial Protocol~(RSP) с использованием отладочной информации в формате
DWARF~(v4).
}
\vfill
\begin{itemize}
\п Схема использования пакета
\п RSP, раздельное управление нитями и неблокирующий режим
\п API для работы с отладочной информацие из DWARF
\п Работа с точками останова и доступ к данным
\п \textbf{[ToDo]}~\textit{Двухэтапная обработка точек останова}
\п Git для адаптации скриптов к разным версиям исходного кода
\п \textbf{[ToDo]}~\textit{Многоклиентная отладка}
\end{itemize}
\end{frame}


\section{Python-пакет для автоматизации отладки}


\begin{frame}
\end{frame}


\section{}
\begin{frame}
\textbf{%
Средство наблюдения за работой процесса QEmu с интерпретацией внутреннего
состояния в терминах виртуальной машины (ВМ) и QEmu Object Model~(QOM).
}
\vfill
\begin{itemize}
\п Восстановление дерева типов QOM
\п Восстановление состава ВМ
\п Графическое отображение ВМ
\п \textbf{[ToDo]}~\textit{Отображение состояния элементов ВМ}
\п \textbf{[ToDo]}~\textit{Высокоуровневые точки останова}
\п \textbf{[ToDo]}~\textit{Изменение состояния элементов ВМ}
\end{itemize}
\end{frame}


\section{Специализированная отладка QEmu}


\begin{frame}
\end{frame}


\section{}
\begin{frame}{Заключение}
\textbf{%
Результаты
}
\vfill
\begin{itemize}
\п ...
\end{itemize}
\vfill
\textit{%
Спасибо за внимание!
}
\end{frame}

\end{document}
