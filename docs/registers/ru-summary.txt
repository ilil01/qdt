Набор программ QEMU Development Toolkit (QDT) среди всего прочего поддерживает
генерацию заготовок для периферийных устройств.
Данная возможность избавляет разработчика от необходимости искать или помнить
наизусть достаточно больше количество формального кода для взаимодействия
с программным интерфейсом эмулятора (т.н. интерфейсная часть кода устройства).
Вместо этого, он может сразу переходить к реализации индивидуальной части кода
устройства.
Генерация интерфейсной части основывается на формальной модели, описывающей
возможные способы взаимодействия устройства с инфраструктуры эмулятора.
В общем случае, индивидуальная часть устройства не может быть формализована,
т.к. все устройства разные.
Поэтому, изначально QDT не поддерживал её генерацию.
Однако в течение разработки разнообразных устройств удалось найти некоторые
часто используемые виды регистров устройств:

- регистры только для чтения;
- регистры для чтения и записи;
- регистры-пустышки;
- регистры только для записи.

Регистры для чтения и записи часто разбиты на битовые поля.
Битовые поля, в свою очередь, бывают следующих типов:

- только для чтения;
- для чтения и записи;
- для чтения и записи (со стороны процессора), но только после чтения (со
стороны процессора) с момента последнего изменения этого поля устройством (со
стороны устройства).
- для однократной записи.

Регистры-пустышки используются для заполнения неиспользуемых интервалов в
банках регистров устройств.
При обращении к ним выводятся отладочные предупреждения, т.к. это может
свидетельствовать о неверном размещении регистров.

Регистры только для записи при чтении ведут себя как регистры-пустышки.

На основе этой классификации была разработана модель регистров устройств,
выраженная в расширении для API, используемого QDT для настройки генерации
заготовок.
По списку регистров, QDT генерирует конструкции `switch` в обработчиках
чтения-записи блока регистров устройства.
В блоки этих конструкции вставляется вспомогательный код, реализующий вид
регистра и его битовых полей.
В последствие, разработчик дополнит этот код более подробной логикой, если
нужно.
Некоторые виды регистров (битовых полей) подразумевают присутствие
дополнительного кода в других частях заготовки.
Размещение этого кода происходит автоматически.

Размер заготовки кода регистров примерно в два раза больше описания этих
регистров на разработанном расширении API.
Это вызвано тем, что в API регистры описываются в одном месте, а обработчиков
чтения-записи блока регистров --- два.

